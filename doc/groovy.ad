= Groovy Programming
[.etp]
https://github.com/stardog-union/stardog-docs/edit/develop/src/doc/groovy.ad[Edit This Section]&nbsp;image:e1.png[Edit,16,16]
++++
<div style="clear: both;"></div>
++++

http://http://groovy.codehaus.org/[Groovy] is an agile and dynamic
programming language for the JVM, making popular programming features
such as closures available to Java developers. Stardog's Groovy support
makes life easier for developers who need to work with RDF, SPARQL, and
OWL by way of Stardog.

The Groovy for Stardog http://github.com/complexible/stardog-groovy[source code]
is available on Github.

Binary releases are available on the https://github.com/complexible/stardog-groovy/releases[Github release
page] and via Maven
central as of version 2.1.3 and beyond using the following dependency
declaration (Gradle style) `com.complexible.stardog:stardog-groovy:2.1.3`.

As of version 2.1.3, Stardog-Groovy can be included via
"com.complexible.stardog:stardog-groovy:2.1.3" from Maven central.

NOTE: You must include our public repository in your build script to get the Stardog
client dependencies into your local repository.

Using the embedded server with Stardog Groovy is not supported in 2.1.2, due to
conflicts of the asm library for various third party dependencies.  If you wish
to use the embedded server with similar convenience APIs, please try <<Spring Programming,Stardog with Spring>>. Also 2.1.3 and beyond of Stardog-Groovy no
longer requires the use of the Spring framework.

The Stardog-Groovy version always matches the Stardog release, e.g. for Stardog
2.2.2 use stardog-groovy-2.2.2.

== Overview

Groovy for Stardog provides a set of Groovy API
wrappers for developers to build applications with Stardog and take
advantage of native Groovy features. For example, you can create a
Stardog connection pool in a single line, much like Groovy SQL support.
In Groovy for Stardog, queries can be iterated over using closures and
transaction safe closures can be executed over a connection.

For the first release, Groovy for Stardog includes
`com.complexible.stardog.ext.groovy.Stardog` with the following methods:

.  `Stardog(map)` constructor for managing Stardog connection pools
.  `each(String, Closure)` for executing a closure over a query's
    results, including projecting SPARQL result variables into the
    closure.
.  `query(String, Closure)` for executing a closure over a query's
    results, passing the BindingSet to the closure
.  `insert(List)` for inserting a list of vars as a triple, or a list
    of list of triples for insertion
.  `remove(List)` for removing a triple from the database
.  `withConnection` for executing a closure with a transaction safe
    instance of
    http://stardog.com/docs/java/snarl/com/complexible/stardog/api/Connection.html[`Connection`]



== Examples

Here are some examples of the more interesting parts of Stardog Groovy.

=== Create a Connection

[source,groovy]
----
include::https://gist.githubusercontent.com/AlBaker/4652565/raw/StardogConnection.groovy[]
----

=== SPARQL Vars Projected into Groovy Closures

[source,groovy]
----
include::https://gist.githubusercontent.com/AlBaker/4652590/raw/Projection.groovy[]
----

===  Add & Remove Triples

[source,groovy]
----
include::https://gist.githubusercontent.com/AlBaker/4652608/raw/StardogAddRemove.groovy[]
----

=== withConnection Closure

[source,groovy]
----
include::https://gist.githubusercontent.com/AlBaker/4652621/raw/StardogWithConnection.groovy[]
----

===  SPARQL Update Support

[source,groovy]
----
include::https://gist.githubusercontent.com/AlBaker/7862684/raw/StardogGroovyUpdate.groovy[]
----
